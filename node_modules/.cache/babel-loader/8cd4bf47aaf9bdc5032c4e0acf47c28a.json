{"ast":null,"code":"import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\nimport moment from 'moment';\nimport { isStudent, isKhai_mail, isAdmin } from \"../../../helpers/validate\";\nexport const userSignIn = ({\n  token\n}) => {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = data => {\n  const {\n    user\n  } = data;\n  user.birth_date = moment(user.birth_date).format(\"DD-MM-YYYY\");\n  return {\n    type: types.SET_ME,\n    user: { ...data,\n      user: user\n    }\n  };\n};\nexport const signIn = credentials => dispatch => api.users.signin(credentials).then(d => d ? dispatch(userSignIn(d.data)) : d);\nexport const me = () => dispatch => api.users.me().then(data => dispatch(setMe(data)));\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/diploma/diplom-front/src/state/ducks/user/actions.js"],"names":["types","api","moment","isStudent","isKhai_mail","isAdmin","userSignIn","token","localStorage","setItem","type","SIGN_IN","setMe","data","user","birth_date","format","SET_ME","signIn","credentials","dispatch","users","signin","then","d","me","signOut","removeItem","SIGN_OUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAChC,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,QAAgD,2BAAhD;AAGA,OAAO,MAAMC,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAEvC,MAAIA,KAAJ,EAAW;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEV,KAAK,CAACW,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CAXM;AAaP,OAAO,MAAMK,KAAK,GAAIC,IAAD,IAAS;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAASD,IAAf;AAEAC,EAAAA,IAAI,CAACC,UAAL,GAAkBb,MAAM,CAACY,IAAI,CAACC,UAAN,CAAN,CAAwBC,MAAxB,CAA+B,YAA/B,CAAlB;AAEA,SAAQ;AACNN,IAAAA,IAAI,EAAEV,KAAK,CAACiB,MADN;AAENH,IAAAA,IAAI,EAAE,EACJ,GAAGD,IADC;AAEJC,MAAAA,IAAI,EAAEA;AAFF;AAFA,GAAR;AAOD,CAZM;AAcP,OAAO,MAAMI,MAAM,GAAIC,WAAD,IAAiBC,QAAQ,IAC7CnB,GAAG,CAACoB,KAAJ,CAAUC,MAAV,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAmCC,CAAC,IAAKA,CAAC,GAAGJ,QAAQ,CAACd,UAAU,CAACkB,CAAC,CAACX,IAAH,CAAX,CAAX,GAAgCW,CAA1E,CADK;AAIP,OAAO,MAAMC,EAAE,GAAG,MAAML,QAAQ,IAChCnB,GAAG,CAACoB,KAAJ,CAAUI,EAAV,GAAeF,IAAf,CAAoBV,IAAI,IAAIO,QAAQ,CAACR,KAAK,CAACC,IAAD,CAAN,CAApC,CADO;AAGP,OAAO,MAAMa,OAAO,GAAG,MAAM;AAC3BlB,EAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLjB,IAAAA,IAAI,EAAEV,KAAK,CAAC4B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\nimport api from '../../../api'; // like api\nimport moment from 'moment'\nimport { isStudent, isKhai_mail, isAdmin } from \"../../../helpers/validate\";\n\n\nexport const userSignIn = ( {token} ) => { \n  \n  if (token) {\n    \n    localStorage.setItem(\"token\", token);\n     \n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = (data) =>{\n  const {user} = data\n\n  user.birth_date = moment(user.birth_date).format(\"DD-MM-YYYY\")\n\n  return ({\n    type: types.SET_ME,\n    user: {\n      ...data,\n      user: user\n    }\n  })\n}\n\nexport const signIn = (credentials) => dispatch =>\n  api.users.signin(credentials).then(d => (d ? dispatch(userSignIn(d.data)):d))\n\n \nexport const me = () => dispatch => \napi.users.me().then(data => dispatch(setMe(data)));\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}