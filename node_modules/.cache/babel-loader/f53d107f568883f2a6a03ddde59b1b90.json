{"ast":null,"code":"import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\nimport moment from 'moment';\nimport { isStudent, isKhai_mail, isAdmin } from \"../../../helpers/validate\";\nexport const userSignIn = ({\n  token\n}) => {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = ({\n  user\n}, ...rest) => {\n  user.birth_date = moment(user.birth_date).format(\"DD-MM-YYYY\");\n  let role = isKhai_mail(user.email) ? isStudent(user.email) ? 2 : isAdmin(user.email) ? 0 : 1 : null;\n  return {\n    type: types.SET_ME,\n    user: { ...user,\n      role\n    }\n  };\n};\nexport const signIn = credentials => dispatch => api.users.signin(credentials).then(d => d ? dispatch(userSignIn(d.data)) : d);\nexport const me = () => dispatch => api.users.me().then(data => dispatch(setMe(data)));\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/diploma/diplom-front/src/state/ducks/user/actions.js"],"names":["types","api","moment","isStudent","isKhai_mail","isAdmin","userSignIn","token","localStorage","setItem","type","SIGN_IN","setMe","user","rest","birth_date","format","role","email","SET_ME","signIn","credentials","dispatch","users","signin","then","d","data","me","signOut","removeItem","SIGN_OUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAChC,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,QAAgD,2BAAhD;AAGA,OAAO,MAAMC,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAEvC,MAAIA,KAAJ,EAAW;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEV,KAAK,CAACW,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CAXM;AAaP,OAAO,MAAMK,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,EAAS,GAAGC,IAAZ,KAAoB;AAEzCD,EAAAA,IAAI,CAACE,UAAL,GAAkBb,MAAM,CAACW,IAAI,CAACE,UAAN,CAAN,CAAwBC,MAAxB,CAA+B,YAA/B,CAAlB;AACA,MAAIC,IAAI,GAAGb,WAAW,CAACS,IAAI,CAACK,KAAN,CAAX,GACIf,SAAS,CAACU,IAAI,CAACK,KAAN,CAAT,GAAwB,CAAxB,GAA4Bb,OAAO,CAACQ,IAAI,CAACK,KAAN,CAAP,GAAsB,CAAtB,GAA0B,CAD1D,GAC6D,IADxE;AAGA,SAAQ;AACNR,IAAAA,IAAI,EAAEV,KAAK,CAACmB,MADN;AAENN,IAAAA,IAAI,EAAE,EACJ,GAAGA,IADC;AAEJI,MAAAA;AAFI;AAFA,GAAR;AAOC,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAIC,WAAD,IAAiBC,QAAQ,IAC7CrB,GAAG,CAACsB,KAAJ,CAAUC,MAAV,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAmCC,CAAC,IAAKA,CAAC,GAAGJ,QAAQ,CAAChB,UAAU,CAACoB,CAAC,CAACC,IAAH,CAAX,CAAX,GAAgCD,CAA1E,CADK;AAIP,OAAO,MAAME,EAAE,GAAG,MAAMN,QAAQ,IAChCrB,GAAG,CAACsB,KAAJ,CAAUK,EAAV,GAAeH,IAAf,CAAoBE,IAAI,IAAIL,QAAQ,CAACV,KAAK,CAACe,IAAD,CAAN,CAApC,CADO;AAGP,OAAO,MAAME,OAAO,GAAG,MAAM;AAC3BrB,EAAAA,YAAY,CAACsB,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLpB,IAAAA,IAAI,EAAEV,KAAK,CAAC+B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\nimport api from '../../../api'; // like api\nimport moment from 'moment'\nimport { isStudent, isKhai_mail, isAdmin } from \"../../../helpers/validate\";\n\n\nexport const userSignIn = ( {token} ) => { \n  \n  if (token) {\n    \n    localStorage.setItem(\"token\", token);\n     \n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = ({user}, ...rest) =>{\n\nuser.birth_date = moment(user.birth_date).format(\"DD-MM-YYYY\")\nlet role = isKhai_mail(user.email) ? \n              (isStudent(user.email) ? 2 : isAdmin(user.email) ? 0 : 1):null;\n\nreturn ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    role\n  }\n})\n}\n\nexport const signIn = (credentials) => dispatch =>\n  api.users.signin(credentials).then(d => (d ? dispatch(userSignIn(d.data)):d))\n\n \nexport const me = () => dispatch => \napi.users.me().then(data => dispatch(setMe(data)));\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}